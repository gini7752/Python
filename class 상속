'''
클래스 상속
- 다른 클래스의 기능을 물려받는 것
- 부모 클래스(슈퍼 클래스) : 상속 능동, 자식 클래스(서브 클래스) : 상속 수동
super class:
    ~

serve class(super class):
    ~
'''
class Person:
    def __init__(self, name):
        self.name=name;

    def eat(self, food):
        print(self.name+'가'+food+'를 먹습니다');

class Student(Person):
    def __init__(self, name, school):
        super().__init__(name); # 자식클래스가 부모클래스의 기능을 사용하고 싶을 때 부모 클래스 호출 함수
        self.school=school;

    def study(self):
        print(self.name+'는'+self.school+'에서 공부합니다');

potter=Student("해리포터", "호그와트");
potter.eat("피자");
potter.study();

'''
다중 상속
class a

class b

class c(a,b)
'''
class Person:
    def hi(self):
        print("hi");

class Univ:
    def manage(self):
        print("학점관리");

class Student(Person, Univ):
    def study(self):
        print("study");

a=Student();
a.hi();
a.study();
a.manage();

'''
서브클래스에서  super()로 슈퍼클래스 접근하면 순서상 먼저 상속받은 클래스로 접근
모든 슈퍼클래스 생성자 호출하려면 각 슈퍼클래스 이름 명시 필수
'''
class A:
    def __init__(self):
        print("A");

class B:
    def __init__(self):
        print("B");

class C(A, B):
    def __init__(self):
        # super().__init__();
        A.__init__(self);
        B.__init__(self);
c=C();
